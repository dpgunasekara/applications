# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

schedules:
- cron: '0 0 * * *'
  displayName: Daily midnight build
  branches:
    include:
    - main
    - master

resources:
 repositories:
   - repository: bobAgency # Alias for the repository
     type: github
     name: Novustech-SL/BOB-Agency
     endpoint: Novustech-SL
   - repository: bobLogger # Alias for the repository
     type: github
     name: Novustech-SL/bob-Logger
     endpoint: Novustech-SL
   - repository: bobBurs # Alias for the repository
     type: github
     name: Novustech-SL/BOBBURS
     endpoint: Novustech-SL
   - repository: bobFileProcessing # Alias for the repository
     type: github
     name: Novustech-SL/BOB-FileProcessing
     endpoint: Novustech-SL
   - repository: bobOneGov # Alias for the repository
     type: github
     name: Novustech-SL/bob-onegov
     endpoint: Novustech-SL
   - repository: bobReporting # Alias for the repository
     type: github
     name: Novustech-SL/BOB-Reporting
     endpoint: Novustech-SL
   - repository: bobUserLimits # Alias for the repository
     type: github
     name: Novustech-SL/BOB-userlimits
     endpoint: Novustech-SL
   - repository: bobMposInterface # Alias for the repository
     type: github
     name: Novustech-SL/bob_mpos_interface
     endpoint: Novustech-SL
   - repository: bobQueueManager # Alias for the repository
     type: github
     name: Novustech-SL/bob-queue-manager
     endpoint: Novustech-SL
   - repository: bobR3portal # Alias for the repository
     type: github
     name: Novustech-SL/bob-r3portal
     endpoint: Novustech-SL
   - repository: bobReferencing # Alias for the repository
     type: github
     name: Novustech-SL/bob-referencing
     endpoint: Novustech-SL
   - repository: bobPaymentApi # Alias for the repository
     type: github
     name: Novustech-SL/bob-payment-api
     endpoint: Novustech-SL
   - repository: bobOag # Alias for the repository
     type: github
     name: Novustech-SL/bob-oag
     endpoint: Novustech-SL
   - repository: bobAuditService # Alias for the repository
     type: github
     name: Novustech-SL/bob-AuditService
     endpoint: Novustech-SL
   - repository: bobUrm # Alias for the repository
     type: github
     name: Novustech-SL/bob-urm
     endpoint: Novustech-SL
   - repository: bobMessagingService # Alias for the repository
     type: github
     name: Novustech-SL/bob-MessagingService
     endpoint: Novustech-SL
   - repository: switch-interface # Alias for the repository
     type: github
     name: Novustech-SL/switch-interface
     endpoint: Novustech-SL
   - repository: bobSignage # Alias for the repository
     type: github
     name: Novustech-SL/bob-signage
     endpoint: Novustech-SL
#   - repository: NovatrackApp # Alias for the repository
#     type: github
#     name: Novustech-SL/NovatrackApp
#     endpoint: Novustech-SL
#   - repository: novatrackMessagingService # Alias for the repository
#     type: github
#     name: Novustech-SL/NovatrackMessaging
#     endpoint: Novustech-SL
#   - repository: novatrackAuditService # Alias for the repository
#     type: github
#     name: Novustech-SL/NovatrackAudit
#     endpoint: Novustech-SL
#   - repository: novatrackLogger # Alias for the repository
#     type: github
#     name: Novustech-SL/NovatrackLogger
#     endpoint: Novustech-SL
#   - repository: novatrackURM # Alias for the repository
#     type: github
#     name: Novustech-SL/NovatrackURM
#     endpoint: Novustech-SL



variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'a4b4f95a-b9b0-4bb0-8dd8-f02126a20f3a'
  containerRegistry: 'cregdcrsuat01.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build_bobAgency
    displayName: Build bobAgency
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobAgency
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'bobagency'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobLogger
    displayName: Build bobLogger
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobLogger
    - task: Maven@3
      inputs:
        mavenPomFile: 'bob-logger/pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s bob-logger/settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'boblogger'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobBurs
    displayName: Build bobBurs
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobBurs
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'bobburs'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobFileProcessing
    displayName: Build bobFileProcessing
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobFileProcessing
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'bobfileprocessing'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobOneGov
    displayName: Build bobOneGov
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobOneGov
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'bobonegov'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobReporting
    displayName: Build bobReporting
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobReporting
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'bobreporting'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobUserLimits
    displayName: Build bobUserLimits
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobUserLimits
    - task: Maven@3
      inputs:
        mavenPomFile: 'bob-userlimits/pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s bob-userlimits/settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'bobuserlimits'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobMposInterface
    displayName: Build bobMposInterface
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobMposInterface
    - task: Maven@3
      inputs:
        mavenPomFile: 'bob-mpos-interface/pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s bob-mpos-interface/settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'bobmposinterface'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobQueueManager
    displayName: Build bobQueueManager
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobQueueManager
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'bobqueuemanager'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobR3portal
    displayName: Build bobR3portal
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobR3portal
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'bobr3portal'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobReferencing
    displayName: Build bobReferencing
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobReferencing
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'bobreferencing'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobPaymentAPI
    displayName: Build bobPaymentAPI
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobPaymentAPI
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'bobpaymentapi'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobOag
    displayName: Build bobOag
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobOag
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'boboag'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobAuditService
    displayName: Build bobAuditService
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobAuditService
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'bobauditservice'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobUrm
    displayName: Build bobUrm
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobUrm
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'boburm'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobMessagingService
    displayName: Build bobMessagingService
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobMessagingService
    - task: Maven@3
      inputs:
        mavenPomFile: 'drcs_alert_system/pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s drcs_alert_system/settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'bobmessaging'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_switch_interface
    displayName: Build bobSwitchInterface
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: switch-interface
    - task: Maven@3
      inputs:
        mavenPomFile: 'switchinterfacerpm/pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s switchinterfacerpm/settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'bobswitchinterface'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bob_signage
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobSignage
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: 'bobsignage'
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
#  - job: Build_NovatrackApp
#    displayName: Build NovatrackApp
#    pool:
#      vmImage: $(vmImageName)
#    steps:
#    - checkout: NovatrackApp
#    - task: Maven@3
#      inputs:
#        mavenPomFile: 'NovatrackApp/pom.xml' # Adjust path if needed
#        goals: 'clean package'
#        options: '-Dmaven.test.skip=true -s NovatrackApp/settings.xml'
#        publishJUnitResults: false
#        javaHomeOption: 'JDKVersion'
#        jdkVersionOption: '1.17'
#        mavenAuthenticateFeed: true
#    - task: Docker@2
#      displayName: Build and push an image to container registry
#      inputs:
#        command: buildAndPush
#        repository: 'novatrackapp'
#        dockerfile: $(dockerfilePath)
#        containerRegistry: $(dockerRegistryServiceConnection)
#        tags: |
#          latest
#          $(Build.BuildId)
#  - job: Build_novatrackMessagingService
#    displayName: Build novatrackMessagingService
#    pool:
#      vmImage: $(vmImageName)
#    steps:
#    - checkout: novatrackMessagingService
#    - task: Maven@3
#      inputs:
#        mavenPomFile: 'novatrack-messaging/pom.xml' # Adjust path if needed
#        goals: 'clean package'
#        options: '-Dmaven.test.skip=true -s novatrack-messaging/settings.xml'
#        publishJUnitResults: false
#        javaHomeOption: 'JDKVersion'
#        jdkVersionOption: '1.17'
#        mavenAuthenticateFeed: true
#    - task: Docker@2
#      displayName: Build and push an image to container registry
#      inputs:
#        command: buildAndPush
#        repository: 'novatrackmessaging'
#        dockerfile: $(dockerfilePath)
#        containerRegistry: $(dockerRegistryServiceConnection)
#        tags: |
#          latest
#          $(Build.BuildId)
#  - job: Build_novatrackAuditService
#    displayName: Build novatrackAuditService
#    pool:
#      vmImage: $(vmImageName)
#    steps:
#    - checkout: novatrackAuditService
#    - task: Maven@3
#      inputs:
#        mavenPomFile: 'novatrack-audit/pom.xml' # Adjust path if needed
#        goals: 'clean package'
#        options: '-Dmaven.test.skip=true -s novatrack-audit/settings.xml'
#        publishJUnitResults: false
#        javaHomeOption: 'JDKVersion'
#        jdkVersionOption: '1.17'
#        mavenAuthenticateFeed: true
#    - task: Docker@2
#      displayName: Build and push an image to container registry
#      inputs:
#        command: buildAndPush
#        repository: 'novatrackauditservice'
#        dockerfile: $(dockerfilePath)
#        containerRegistry: $(dockerRegistryServiceConnection)
#        tags: |
#          latest
#          $(Build.BuildId)
#  - job: Build_novatrackLogger
#    displayName: Build novatrackLogger
#    pool:
#      vmImage: $(vmImageName)
#    steps:
#    - checkout: novatrackLogger
#    - task: Maven@3
#      inputs:
#        mavenPomFile: 'novatrack-logger/pom.xml' # Adjust path if needed
#        goals: 'clean package'
#        options: '-Dmaven.test.skip=true -s novatrack-logger/settings.xml'
#        publishJUnitResults: false
#        javaHomeOption: 'JDKVersion'
#        jdkVersionOption: '1.17'
#        mavenAuthenticateFeed: true
#    - task: Docker@2
#      displayName: Build and push an image to container registry
#      inputs:
#        command: buildAndPush
#        repository: 'novatracklogger'
#        dockerfile: $(dockerfilePath)
#        containerRegistry: $(dockerRegistryServiceConnection)
#        tags: |
#          latest
#          $(Build.BuildId)
#  - job: Build_novatrackURM
#    displayName: Build novatrackURM
#    pool:
#      vmImage: $(vmImageName)
#    steps:
#    - checkout: novatrackURM
#    - task: Maven@3
#      inputs:
#        mavenPomFile: 'pom.xml' # Adjust path if needed
#        goals: 'clean package'
#        options: '-Dmaven.test.skip=true -s settings.xml'
#        publishJUnitResults: false
#        javaHomeOption: 'JDKVersion'
#        jdkVersionOption: '1.17'
#        mavenAuthenticateFeed: true
#    - task: Docker@2
#      displayName: Build and push an image to container registry
#      inputs:
#        command: buildAndPush
#        repository: 'novatrackurm'
#        dockerfile: $(dockerfilePath)
#        containerRegistry: $(dockerRegistryServiceConnection)
#        tags: |
#          latest
#          $(Build.BuildId)

