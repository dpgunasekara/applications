{{- range .Values.containers }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .name }}-log
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs-client
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .name }}-log
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs-client
  volumeName: {{ .name }}-log
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .name }}-data
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs-client
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .name }}-data
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs-client
  volumeName: {{ .name }}-data
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .name }}-config
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs-client
  nfs:
    server: {{ $.Values.nfsServer }}
    path: /exports/config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .name }}-config
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs-client
  volumeName: {{ .name }}-config
  resources:
    requests:
      storage: 5Gi
---
{{if eq .type "maven" }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .name }}-service
spec:
  type: LoadBalancer
  loadBalancerIP: {{ .loadBalancerIP }}
  ports:
    - name: service
      port: {{ .port_1 }}
      targetPort: {{ .target_1 }}
{{ if .port_2 }}
    - name: listener
      port: {{ .port_2 }}
      targetPort: {{ .target_2 }}
{{ end }}
  selector:
    app: {{ .name }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .name }}
  template:
    metadata:
      annotations:
        rollme: "{{ now | unixEpoch }}"
      labels:
        app: {{ .name }}
    spec:
      containers:
        - name: {{ .name }}
          image: {{ $.Values.containerRegistry }}/{{ $.Values.project }}/{{ .name }}:latest
          ports:
            - name: service
              containerPort: {{ .target_1 }}
{{ if .port_2 }}
            - name: listener
              containerPort: {{ .target_2 }}
{{ end }}
          resources:
            requests:
              cpu: {{ .req_cpu }}
              memory:  {{ .req_mem }}
            limits:
              cpu: {{ .lim_cpu }}
              memory: {{ .lim_mem }}
          env:
            - name: KEY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ssl-keystore-secret
                  key: key-store-password
            - name: DB_CRED
              valueFrom:
                secretKeyRef:
                  name: db-cred-secret
                  key: key-store-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: REDIS_PASSWORD                  
            - name: SERVICE_NAME
              value: {{ .name }}
            - name: DB_SERVER
              value: BHPRDDBS00.bh.bob.bw:1433
            - name: DB
              value: {{ .database }}
          volumeMounts:
            - name: {{ .name }}-config
              mountPath: /app/config
              subPath: {{ .name }}
            - name: {{ .name }}-data
              mountPath: /app/data
              subPath: {{ .name }}
            - name: {{ .name }}-log
              mountPath: /app/log
              subPath: {{ .name }}
            - name: keystore-volume
              mountPath: "/etc/ssl/certs/{{ .name }}-service.p12"
              subPath: "{{ .name }}-service.p12"
            - name: url-config
              mountPath: "/app/config/url.yaml"
              subPath: "url.yaml"
              readOnly: true
            - name: server-config
              mountPath: "/app/config/server.yaml"
              subPath: "server.yaml"
              readOnly: true
            - name: data-config
              mountPath: "/app/config/data.yaml"
              subPath: "data.yaml"
              readOnly: true
            - name: logging-config
              mountPath: "/app/config/logging.yaml"
              subPath: "logging.yaml"
              readOnly: true
            - name: security-config
              mountPath: "/app/config/security.yaml"
              subPath: "security.yaml"
              readOnly: true
            - name: redis-config
              mountPath: "/app/config/redis.yaml"
              subPath: "redis.yaml"
              readOnly: true              
      volumes:
        - name: {{ .name }}-config
          persistentVolumeClaim:
            claimName: {{ .name }}-config
        - name: {{ .name }}-data
          persistentVolumeClaim:
            claimName: {{ .name }}-data
        - name: {{ .name }}-log
          persistentVolumeClaim:
            claimName: {{ .name }}-log
        - name: keystore-volume
          secret:
            secretName: {{ .name }}-keystore
        - name: url-config
          configMap:
            name: url-config
            items:
            - key: url.yaml
              path: url.yaml  
        - name: server-config
          configMap:
            name: server-config
            items:
            - key: server.yaml
              path: server.yaml  
        - name: data-config
          configMap:
            name: data-config
            items:
            - key: data.yaml
              path: data.yaml  
        - name: logging-config
          configMap:
            name: logging-config
            items:
            - key: logging.yaml
              path: logging.yaml  
        - name: security-config
          configMap:
            name: security-config
            items:
            - key: security.yaml
              path: security.yaml
        - name: redis-config
          configMap:
            name: redis-config
            items:
            - key: redis.yaml
              path: redis.yaml                
---
{{ end }}
{{if eq .type "react" }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .name }}
spec:
  type: LoadBalancer
  loadBalancerIP: {{ .loadBalancerIP }}
  ports:
    - port: {{ .port_1 }}
      targetPort: {{ .target_1 }}
  selector:
    app: {{ .name }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .name }}
  template:
    metadata:
      annotations:
        rollme: "{{ now | unixEpoch }}"
      labels:
        app: {{ .name }}
    spec:
      containers:
        - name: {{ .name }}
          image: {{ $.Values.containerRegistry }}/{{ $.Values.project }}/{{ .name }}:latest
          ports:
            - containerPort: {{ .target_1 }}
          resources:
            requests:
              cpu: {{ .req_cpu }}
              memory:  {{ .req_mem }}
            limits:
              cpu: {{ .lim_cpu }}
              memory: {{ .lim_mem }}
          envFrom:
            - configMapRef:
                name: {{ .name }}-config
          volumeMounts:
            - name: {{ .name }}-config
              mountPath: /app/config
              subPath: {{ .name }}
            - name: {{ .name }}-data
              mountPath: /app/data
              subPath: {{ .name }}
            - name: {{ .name }}-log
              mountPath: /app/log
              subPath: {{ .name }}
            - name: keystore-volume-fullchain
              mountPath: "/app/config/{{ .name }}-fullchain.pem"
              subPath: "{{ .name }}-fullchain.pem"
              readOnly: true 
            - name: keystore-volume-privkey
              mountPath: "/app/config/{{ .name }}-privkey.pem"
              subPath: "{{ .name }}-privkey.pem"
              readOnly: true             
      volumes:
        - name: {{ .name }}-config
          persistentVolumeClaim:
            claimName: {{ .name }}-config
        - name: {{ .name }}-data
          persistentVolumeClaim:
            claimName: {{ .name }}-data
        - name: {{ .name }}-log
          persistentVolumeClaim:
            claimName: {{ .name }}-log
        - name: keystore-volume-fullchain
          secret:
            secretName: {{ .name }}-fullchain-keystore
        - name: keystore-volume-privkey
          secret:
            secretName: {{ .name }}-privkey-keystore

---
{{ end }}
{{- end }}