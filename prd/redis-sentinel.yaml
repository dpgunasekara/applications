apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel
  namespace: prd
spec:
  selector:
    app: redis-sentinel
  ports:
    - name: sentinel
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-sentinel
  namespace: prd
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis-sentinel
  template:
    metadata:
      labels:
        app: redis-sentinel
    spec:
      containers:
        - name: sentinel
          image: bh-prd-hbr-01.bh.bob.bw/bh-prd-hreg-01/redis:8.0.2-debian-12-r4
          command:
            - sh
            - -c
            - |
              echo "[Sentinel] Resolving redis-0 IP..."
              until redis_ip=$(getent hosts redis-0.redis.prd.svc.cluster.local | awk '{ print $1 }'); do
                echo "[Sentinel] Waiting for redis-0 to resolve..."
                sleep 2
              done
              
              echo "[Sentinel] Resolved redis-0 IP: $redis_ip"

              cat <<EOF > /tmp/sentinel.conf
              sentinel monitor mymaster $redis_ip 6379 2
              sentinel auth-pass mymaster $REDIS_PASSWORD
              sentinel down-after-milliseconds mymaster 5000
              sentinel failover-timeout mymaster 10000
              EOF

              echo "[Sentinel] Config written:"
              cat /tmp/sentinel.conf

              redis-sentinel /tmp/sentinel.conf
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: REDIS_PASSWORD
          ports:
            - containerPort: 6379
              name: sentinel
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 10                 
