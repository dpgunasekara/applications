# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

  
resources:
 repositories:
   - repository: bobagency 
     type: git
     name: 'BOB - Digital Revenue Collection System/bobagency'
   - repository: boblogger
     type: git
     name: 'BOB - Digital Revenue Collection System/boblogger'
   - repository: bobburs
     type: git
     name: 'BOB - Digital Revenue Collection System/bobburs'
   - repository: bobfileprocessing
     type: git
     name: 'BOB - Digital Revenue Collection System/bobfileprocessing'
   - repository: bobonegov
     type: git
     name: 'BOB - Digital Revenue Collection System/bobonegov'
   - repository: bobreporting
     type: git
     name: 'BOB - Digital Revenue Collection System/bobreporting'
   - repository: bobuserlimits
     type: git
     name: 'BOB - Digital Revenue Collection System/bobuserlimits'
   - repository: bobmposinterface
     type: git
     name: 'BOB - Digital Revenue Collection System/bobmposinterface'
   - repository: bobqueuemanager
     type: git
     name: 'BOB - Digital Revenue Collection System/bobqueuemanager'
   - repository: bobreferencing
     type: git
     name: 'BOB - Digital Revenue Collection System/bobreferencing'
   - repository: bobpayment
     type: git
     name: 'BOB - Digital Revenue Collection System/bobpayment'
   - repository: boboag
     type: git
     name: 'BOB - Digital Revenue Collection System/boboag'
   - repository: bobaudit
     type: git
     name: 'BOB - Digital Revenue Collection System/bobaudit'
   - repository: boburm
     type: git
     name: 'BOB - Digital Revenue Collection System/boburm'
   - repository: bobmessaging
     type: git
     name: 'BOB - Digital Revenue Collection System/bobmessaging'
   - repository: bobswitchinterface
     type: git
     name: 'BOB - Digital Revenue Collection System/bobswitchinterface'
   - repository: bobmpos
     type: git
     name: 'BOB - Digital Revenue Collection System/bobmpos'
   - repository: bobmposlogger
     type: git
     name: 'BOB - Digital Revenue Collection System/bobmposlogger'
   - repository: bobmerchantmate
     type: git
     name: 'BOB - Digital Revenue Collection System/bobmerchantmate'
   - repository: bobnovatrackextapp
     type: git
     name: 'BOB - Digital Revenue Collection System/bobnovatrackextapp'
   - repository: bobnovatrackintapp
     type: git
     name: 'BOB - Digital Revenue Collection System/bobnovatrackintapp'
   - repository: bobcoindeposit
     type: git
     name: 'BOB - Digital Revenue Collection System/bobcoindeposit'


variables:
  - name: dockerfilePath
    value: '$(Build.SourcesDirectory)/Dockerfile'
  - name: tag
    value: '$(Build.BuildId)'
  - name: vmImageName
    value: 'ubuntu-latest'
  - name: environmentName
    value: 'uat'
  - group: build-variables

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build_bobagency
    variables:
      imageRepository: bobagency
    displayName: Build bobagency
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobagency
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobagency/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml, $(configStorageAccountName), $(configstorageAccountKey), $(configFileShareName)'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobagency/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobagency
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobagency
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_boblogger
    variables:
      imageRepository: boblogger
    displayName: Build boblogger
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: boblogger
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "boblogger/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml, $(configStorageAccountName), $(configstorageAccountKey), $(configFileShareName)'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "boblogger/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: boblogger
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: boblogger
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobburs
    variables:
      imageRepository: bobburs  
    displayName: Build bobburs
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobburs
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true

        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobburs/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobburs/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobburs
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobburs
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobfileprocessing
    variables:
      imageRepository: bobfileprocessing  
    displayName: Build bobfileprocessing
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobfileprocessing
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true

        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobfileprocessing/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobfileprocessing/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobfileprocessing
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobfileprocessing
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobonegov
    variables:
      imageRepository: bobonegov 
    displayName: Build bobonegov      
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobonegov
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobonegov/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobonegov/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobonegov
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobonegov
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobreporting
    variables:
      imageRepository: bobreporting
    displayName: Build bobreporting
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobreporting
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobreporting/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobreporting/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobreporting
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobreporting
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobuserlimits
    variables:
      imageRepository: bobuserlimits  
    displayName: Build bobuserlimits
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobuserlimits
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobuserlimits/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobuserlimits/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobuserlimits
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobuserlimits
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobmposinterface
    variables:
      imageRepository: bobmposinterface 
    displayName: Build bobmposinterface
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobmposinterface
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobmposinterface/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobmposinterface/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobmposinterface
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobmposinterface
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobqueuemanager
    variables:
      imageRepository: bobqueuemanager 
    displayName: Build bobqueuemanager
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobqueuemanager
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobqueuemanager/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobqueuemanager/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobqueuemanager
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobqueuemanager
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobreferencing
    variables:
      imageRepository: bobreferencing
    displayName: Build bobreferencing
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobreferencing
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobreferencing/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobreferencing/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobreferencing
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobreferencing
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobpayment
    variables:
      imageRepository: bobpayment
    displayName: Build bobpayment
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobpayment
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobpayment/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobpayment/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobpayment
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobpayment
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_boboag
    variables:
      imageRepository: boboag
    displayName: Build boboag
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: boboag
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "boboag/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "boboag/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: boboag
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: boboag
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobaudit
    variables:
      imageRepository: bobaudit
    displayName: Build bobaudit
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobaudit
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobaudit/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobaudit/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobaudit
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $bobaudit
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_boburm
    variables:
      imageRepository: boburm
    displayName: Build boburm
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: boburm
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "boburm/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "boburm/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: boburm
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: boburm
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobmessaging
    variables:
      imageRepository: bobmessaging
    displayName: Build bobmessaging
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobmessaging
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobmessaging/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobmessaging/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobmessaging
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobmessaging
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobswitchinterface
    variables:
      imageRepository: bobswitchinterface
    displayName: Build bobswitchinterface
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobswitchinterface
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobswitchinterface/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobswitchinterface/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobswitchinterface
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobswitchinterface
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobmpos
    variables:
      imageRepository: bobmpos
    displayName: Build bobmpos
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobmpos
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobmpos/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobmpos/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobmpos
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobmpos
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobmposlogger
    variables:
      imageRepository: bobmposlogger
    displayName: Build bobmposlogger
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobmposlogger
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobmposlogger/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobmposlogger/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobmposlogger
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobmposlogger
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobmerchantmate
    variables:
      imageRepository: bobmerchantmate
    displayName: Build bobmerchantmate
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobmerchantmate
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobmerchantmate/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobmerchantmate/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobmerchantmate
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobmerchantmate
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobnovatrackintapp
    variables:
      imageRepository: bobnovatrackintapp
    displayName: Build bobnovatrackintapp
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobnovatrackintapp
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobnovatrackintapp/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobnovatrackintapp/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobnovatrackintapp
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobnovatrackintapp
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobnovatrackextapp
    variables:
      imageRepository: bobnovatrackextapp
    displayName: Build bobnovatrackextapp
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobnovatrackextapp
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobnovatrackextapp/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobnovatrackextapp/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobnovatrackextapp
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobnovatrackextapp
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: Build_bobcoindeposit
    variables:
      imageRepository: bobcoindeposit
    displayName: Build bobcoindeposit
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobcoindeposit
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "bobcoindeposit/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name "$(configStorageAccountName)" \
            --account-key "$(configstorageAccountKey)" \
            --share-name "$(configFileShareName)" \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "bobcoindeposit/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: bobcoindeposit
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: bobcoindeposit
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
