# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker


resources:
 repositories:
   - repository: bobagency
     type: git
     name: 'BOB - Digital Revenue Collection System/bobagency'
   - repository: boblogger
     type: git
     name: 'BOB - Digital Revenue Collection System/boblogger'
   - repository: bobburs
     type: git
     name: 'BOB - Digital Revenue Collection System/bobburs'
   - repository: bobfileprocessing
     type: git
     name: 'BOB - Digital Revenue Collection System/bobfileprocessing'
   - repository: bobonegov
     type: git
     name: 'BOB - Digital Revenue Collection System/bobonegov'
   - repository: bobreporting
     type: git
     name: 'BOB - Digital Revenue Collection System/bobreporting'
   - repository: bobuserlimits
     type: git
     name: 'BOB - Digital Revenue Collection System/bobuserlimits'
   - repository: bobmposinterface
     type: git
     name: 'BOB - Digital Revenue Collection System/bobmposinterface'
   - repository: bobqueuemanager
     type: git
     name: 'BOB - Digital Revenue Collection System/bobqueuemanager'
   - repository: bobreferencing
     type: git
     name: 'BOB - Digital Revenue Collection System/bobreferencing'
   - repository: bobpayment
     type: git
     name: 'BOB - Digital Revenue Collection System/bobpayment'
   - repository: boboag
     type: git
     name: 'BOB - Digital Revenue Collection System/boboag'
   - repository: bobaudit
     type: git
     name: 'BOB - Digital Revenue Collection System/bobaudit'
   - repository: boburm
     type: git
     name: 'BOB - Digital Revenue Collection System/boburm'
   - repository: bobmessaging
     type: git
     name: 'BOB - Digital Revenue Collection System/bobmessaging'
   - repository: bobswitchinterface
     type: git
     name: 'BOB - Digital Revenue Collection System/bobswitchinterface'
   - repository: bobmpos
     type: git
     name: 'BOB - Digital Revenue Collection System/bobmpos'
   - repository: bobmposlogger
     type: git
     name: 'BOB - Digital Revenue Collection System/bobmposlogger'
   - repository: bobmerchantmate
     type: git
     name: 'BOB - Digital Revenue Collection System/bobmerchantmate'
   - repository: bobnovatrackextapp
     type: git
     name: 'BOB - Digital Revenue Collection System/bobnovatrackextapp'
   - repository: bobnovatrackintapp
     type: git
     name: 'BOB - Digital Revenue Collection System/bobnovatrackintapp'
   - repository: bobcoindeposit
     type: git
     name: 'BOB - Digital Revenue Collection System/bobcoindeposit'


variables:
  - name: dockerfilePath
    value: '$(Build.SourcesDirectory)/Dockerfile'
  - name: tag
    value: '$(Build.BuildId)'
  - name: vmImageName
    value: 'ubuntu-latest'
  - name: environmentName
    value: 'uat'    
  - group: build-variables    

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobagency"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]boblogger"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobburs"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true

        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobfileprocessing"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true

        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobonegov"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobreporting"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobuserlimits"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobmposinterface"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobqueuemanager"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobreferencing"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobpayment"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]boboag"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobaudit"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]boburm"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobmessaging"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobswitchinterface"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobmpos"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobmposlogger"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobmerchantmate"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobnovatrackintapp"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobnovatrackextapp"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobcoindeposit"  
  - job: Build $(imageRepository)
    displayName: Build $(imageRepository)
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: $(imageRepository)
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
