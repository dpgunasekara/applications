# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

  
resources:
 repositories:
   - repository: bobagency
     type: git
     name: 'BOB - Digital Revenue Collection System/bobagency'
   - repository: boblogger
     type: git
     name: 'BOB - Digital Revenue Collection System/boblogger'
   - repository: bobburs
     type: git
     name: 'BOB - Digital Revenue Collection System/bobburs'
   - repository: bobfileprocessing
     type: git
     name: 'BOB - Digital Revenue Collection System/bobfileprocessing'
   - repository: bobonegov
     type: git
     name: 'BOB - Digital Revenue Collection System/bobonegov'
   - repository: bobreporting
     type: git
     name: 'BOB - Digital Revenue Collection System/bobreporting'
   - repository: bobuserlimits
     type: git
     name: 'BOB - Digital Revenue Collection System/bobuserlimits'
   - repository: bobmposinterface
     type: git
     name: 'BOB - Digital Revenue Collection System/bobmposinterface'
   - repository: bobqueuemanager
     type: git
     name: 'BOB - Digital Revenue Collection System/bobqueuemanager'
   - repository: bobreferencing
     type: git
     name: 'BOB - Digital Revenue Collection System/bobreferencing'
   - repository: bobpayment
     type: git
     name: 'BOB - Digital Revenue Collection System/bobpayment'
   - repository: boboag
     type: git
     name: 'BOB - Digital Revenue Collection System/boboag'
   - repository: bobaudit
     type: git
     name: 'BOB - Digital Revenue Collection System/bobaudit'
   - repository: boburm
     type: git
     name: 'BOB - Digital Revenue Collection System/boburm'
   - repository: bobmessaging
     type: git
     name: 'BOB - Digital Revenue Collection System/bobmessaging'
   - repository: bobswitchinterface
     type: git
     name: 'BOB - Digital Revenue Collection System/bobswitchinterface'
   - repository: bobmpos
     type: git
     name: 'BOB - Digital Revenue Collection System/bobmpos'
   - repository: bobmposlogger
     type: git
     name: 'BOB - Digital Revenue Collection System/bobmposlogger'
   - repository: bobmerchantmate
     type: git
     name: 'BOB - Digital Revenue Collection System/bobmerchantmate'
   - repository: bobnovatrackextapp
     type: git
     name: 'BOB - Digital Revenue Collection System/bobnovatrackextapp'
   - repository: bobnovatrackintapp
     type: git
     name: 'BOB - Digital Revenue Collection System/bobnovatrackintapp'
   - repository: bobcoindeposit
     type: git
     name: 'BOB - Digital Revenue Collection System/bobcoindeposit'


variables:
  - name: dockerfilePath
    value: '$(Build.SourcesDirectory)/Dockerfile'
  - name: tag
    value: '$(Build.BuildId)'
  - name: vmImageName
    value: 'ubuntu-latest'
  - name: environmentName
    value: 'uat'
  - name: imageRepository
    value: 'empty'
  - group: build-variables

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: setVar_bobagency
    steps:
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobagency"  
  - job: Build_bobagency
    dependsOn: setVar_bobagency
    variables:
      imageRepository: $[ dependencies.setVar_bobagency.outputs['setVar_bobagency.imageRepository'] ]  
    displayName: Build bobagency
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobagency
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo $(imageRepository)
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_boblogger
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]boblogger"  
  - job: Build_boblogger
    dependsOn: setVar_boblogger
    variables:
      imageRepository: $[ dependencies.setVar_boblogger.outputs['setVar_boblogger.imageRepository'] ]  
    displayName: Build boblogger
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: boblogger
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobburs
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobburs"  
  - job: Build_bobburs
    dependsOn: setVar_bobburs
    variables:
      imageRepository: $[ dependencies.setVar_bobburs.outputs['setVar_bobburs.imageRepository'] ]  
    displayName: Build bobburs
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobburs
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true

        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobfileprocessing
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobfileprocessing"  
  - job: Build_bobfileprocessing
    dependsOn: setVar_bobfileprocessing
    variables:
      imageRepository: $[ dependencies.setVar_bobfileprocessing.outputs['setVar_bobfileprocessing.imageRepository'] ]  
    displayName: Build bobfileprocessing
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobfileprocessing
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true

        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobonegov
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobonegov"  
  - job: Build_bobonegov
    dependsOn: setVar_bobonegov
    variables:
      imageRepository: $[ dependencies.setVar_bobonegov.outputs['setVar_bobonegov.imageRepository'] ]  
    displayName: Build $(imageRepository)      
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobonegov
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobreporting
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobreporting"  
  - job: Build_bobreporting
    dependsOn: setVar_bobreporting
    variables:
      imageRepository: $[ dependencies.setVar_bobreporting.outputs['setVar_bobreporting.imageRepository'] ]  
    displayName: Build bobreporting
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobreporting
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobuserlimits
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobuserlimits"  
  - job: Build_bobuserlimits
    dependsOn: setVar_bobuserlimits
    variables:
      imageRepository: $[ dependencies.setVar_bobuserlimits.outputs['setVar_bobuserlimits.imageRepository'] ]  
    displayName: Build bobuserlimits
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobuserlimits
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobmposinterface
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobmposinterface"  
  - job: Build_bobmposinterface
    dependsOn: setVar_bobmposinterface
    variables:
      imageRepository: $[ dependencies.setVar_bobmposinterface.outputs['setVar_bobmposinterface.imageRepository'] ]  
    displayName: Build bobmposinterface
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobmposinterface
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobqueuemanager
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobqueuemanager"  
  - job: Build_bobqueuemanager
    dependsOn: setVar_bobqueuemanager
    variables:
      imageRepository: $[ dependencies.setVar_bobqueuemanager.outputs['setVar_bobqueuemanager.imageRepository'] ]  
    displayName: Build bobqueuemanager
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobqueuemanager
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobreferencing
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobreferencing"  
  - job: Build_bobreferencing
    dependsOn: setVar_bobreferencing
    variables:
      imageRepository: $[ dependencies.setVar_bobreferencing.outputs['setVar_bobreferencing.imageRepository'] ]  
    displayName: Build bobreferencing
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobreferencing
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobpayment
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobpayment"  
  - job: Build_bobpayment
    dependsOn: setVar_bobpayment
    variables:
      imageRepository: $[ dependencies.setVar_bobpayment.outputs['setVar_bobpayment.imageRepository'] ]  
    displayName: Build bobpayment
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobpayment
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_boboag
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]boboag"  
  - job: Build_boboag
    dependsOn: setVar_boboag
    variables:
      imageRepository: $[ dependencies.setVar_boboag.outputs['setVar_boboag.imageRepository'] ]  
    displayName: Build boboag
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: boboag
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobaudit
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobaudit"  
  - job: Build_bobaudit
    dependsOn: setVar_bobaudit
    variables:
      imageRepository: $[ dependencies.setVar_bobaudit.outputs['setVar_bobaudit.imageRepository'] ]  
    displayName: Build bobaudit
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobaudit
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_boburm
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]boburm"  
  - job: Build_boburm
    dependsOn: setVar_boburm
    variables:
      imageRepository: $[ dependencies.setVar_boburm.outputs['setVar_boburm.imageRepository'] ]  
    displayName: Build boburm
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: boburm
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobmessaging
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobmessaging"  
  - job: Build_bobmessaging
    dependsOn: setVar_bobmessaging
    variables:
      imageRepository: $[ dependencies.setVar_bobmessaging.outputs['setVar_bobmessaging.imageRepository'] ]  
    displayName: Build bobmessaging
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobmessaging
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobswitchinterface
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobswitchinterface"  
  - job: Build_bobswitchinterface
    dependsOn: setVar_bobswitchinterface
    variables:
      imageRepository: $[ dependencies.setVar_bobswitchinterface.outputs['setVar_bobswitchinterface.imageRepository'] ]  
    displayName: Build bobswitchinterface
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobswitchinterface
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobmpos
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobmpos"  
  - job: Build_bobmpos
    dependsOn: setVar_bobmpos
    variables:
      imageRepository: $[ dependencies.setVar_bobmpos.outputs['setVar_bobmpos.imageRepository'] ]  
    displayName: Build bobmpos
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobmpos
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobmposlogger
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobmposlogger"  
  - job: Build_bobmposlogger
    dependsOn: setVar_bobmposlogger
    variables:
      imageRepository: $[ dependencies.setVar_bobmposlogger.outputs['setVar_bobmposlogger.imageRepository'] ]  
    displayName: Build bobmposlogger
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobmposlogger
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobmerchantmate
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobmerchantmate"  
  - job: Build_bobmerchantmate
    dependsOn: setVar_bobmerchantmate
    variables:
      imageRepository: $[ dependencies.setVar_bobmerchantmate.outputs['setVar_bobmerchantmate.imageRepository'] ]  
    displayName: Build bobmerchantmate
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobmerchantmate
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobnovatrackintapp
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobnovatrackintapp"  
  - job: Build_bobnovatrackintapp
    dependsOn: setVar_bobnovatrackintapp
    variables:
      imageRepository: $[ dependencies.setVar_bobnovatrackintapp.outputs['setVar_bobnovatrackintapp.imageRepository'] ]  
    displayName: Build bobnovatrackintapp
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobnovatrackintapp
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobnovatrackextapp
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobnovatrackextapp"  
  - job: Build_bobnovatrackextapp
    dependsOn: setVar_bobnovatrackextapp
    variables:
      imageRepository: $[ dependencies.setVar_bobnovatrackextapp.outputs['setVar_bobnovatrackextapp.imageRepository'] ]  
    displayName: Build bobnovatrackextapp
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobnovatrackextapp
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
  - job: setVar_bobcoindeposit
    steps:  
    - script: |
        echo "##vso[task.setvariable variable=imageRepository;isOutput=true]bobcoindeposit"  
  - job: Build_bobcoindeposit
    dependsOn: setVar_bobcoindeposit
    variables:
      imageRepository: $[ dependencies.setVar_bobcoindeposit.outputs['setVar_bobcoindeposit.imageRepository'] ]  
    displayName: Build bobcoindeposit
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: bobcoindeposit
    - script: |
        cp $(Build.SourcesDirectory)/src/main/resources/applicationinsights-$(environmentName).json $(Build.SourcesDirectory)/src/main/resources/applicationinsights.json
      displayName: "Use environment-specific applicationinsights.json"
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml' # Adjust path if needed
        goals: 'clean package'
        options: '-Dmaven.test.skip=true -s settings.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenAuthenticateFeed: true
        
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application-$(environmentName).yml" \
            --path "$(imageRepository)/application-$(environmentName).yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application-$(environmentName).yml'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureStorageConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage file upload \
            --account-name $(configStorageAccountName) \
            --account-key "$(configstorageAccountKey)" \
            --share-name $(configFileShareName) \
            --source "$(Build.SourcesDirectory)/app/config/application.yml" \
            --path "$(imageRepository)/application.yml" \
            --auth-mode key \
            --enable-file-backup-request-intent
      displayName: 'Copy application.yml'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
          $(Build.BuildId)
    - task: Docker@2
      displayName: Build and push an image to container registry 2
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection2)
        tags: |
          latest
          $(Build.BuildId)
