---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  clusterIP: None
  selector:
    app: redis
  ports:
    - name: redis-tls
      port: 6379
      targetPort: 6379
    - name: redis-plain
      port: 6380
      targetPort: 6380
---
apiVersion: v1
kind: Service
metadata:
  name: redis-external
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: 'true'
spec:
  type: LoadBalancer
  loadBalancerIP: 10.207.10.103
  selector:
    statefulset.kubernetes.io/pod-name: redis-0
  ports:
    - name: redis-tls
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: redis
          image: bitnami/redis:8.0.2-debian-12-r4
          securityContext:
            runAsUser: 1001
          ports:
            - containerPort: 6379
              name: redis-tls
            - containerPort: 6380
              name: redis-plain              
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: REDIS_PASSWORD
          command:
            - "sh"
            - "-c"
            - |
              if [ "$(hostname)" = "redis-0" ]; then
                echo "Starting master..."
                redis-server \
                  --tls-port 6379 \
                  --port 6380 \
                  --tls-cert-file /certs/uat.novaware-fullchain.pem \
                  --tls-key-file /certs/uat.novaware-privkey.pem \
                  --tls-ca-cert-file /certs/uat.novaware-fullchain.pem \
                  --requirepass "$REDIS_PASSWORD" \
                  --masterauth "$REDIS_PASSWORD"
              else
                echo "Starting replica of redis-0..."
                redis-server \
                  --tls-port 6379 \
                  --port 6380 \
                  --tls-cert-file /certs/uat.novaware-fullchain.pem \
                  --tls-key-file /certs/uat.novaware-privkey.pem \
                  --tls-ca-cert-file /certs/uat.novaware-fullchain.pem \
                  --requirepass "$REDIS_PASSWORD" \
                  --masterauth "$REDIS_PASSWORD" \
                  --replicaof redis-0.redis.default.svc.cluster.local 6379
              fi
          volumeMounts:
            - name: data
              mountPath: /bitnami/redis/data
            - name: keystore-volume-fullchain
              mountPath: /certs/uat.novaware-fullchain.pem
              subPath: "uat.novaware-fullchain.pem"
              readOnly: true
            - name: keystore-volume-privkey
              mountPath: /certs/uat.novaware-privkey.pem
              subPath: "uat.novaware-privkey.pem"
              readOnly: true
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: keystore-volume-fullchain
          secret:
            secretName: fullchain-uat.novaware-keystore
        - name: keystore-volume-privkey
          secret:
            secretName: privkey-uat.novaware-keystore
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: managed-csi
        resources:
          requests:
            storage: 5Gi
