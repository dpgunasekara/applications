apiVersion: v1
kind: Service
metadata:
  name: postgres
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: postgres
  type: LoadBalancer
  loadBalancerIP: 10.207.10.100
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: keycloak
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: postgres-data
              mountPath: /var/backups
              subPath: backup
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
              subPath: data
            - name: postgres-config
              mountPath: /opt/keycloak/conf
      volumes:
        - name: postgres-config
          persistentVolumeClaim:
            claimName: postgres-config
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
        - name: postgres-log
          persistentVolumeClaim:
            claimName: postgres-log
---
apiVersion: v1
kind: Secret
metadata:
  name: pgpass
data:
#created with: echo "postgres.novusware.com.sg:5432:keycloak:postgres:postgres" | base64
  pgpass: cG9zdGdyZXMubm92dXN3YXJlLmNvbS5zZzo1NDMyOmtleWNsb2FrOnBvc3RncmVzOnBvc3RncmVzCg==
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
spec:
  # Backup the database every day at 2AM
  schedule: "0 2 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: postgres-backup
              image: postgres:16
              command: ["/bin/sh"]
              args: ["-c", 'echo "$PGPASS" > /root/.pgpass && chmod 600 /root/.pgpass && pg_dump -U postgres -h postgres.uat.novaware.com.sg keycloak > /var/backups/backup-$(date +"%m-%d-%Y-%H-%M").sql']
              env:
              - name: PGPASS
                valueFrom:
                  secretKeyRef:
                    name: pgpass
                    key: pgpass
          restartPolicy: Never
